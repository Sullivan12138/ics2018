
/home/hust/ics2018/nexus-am/tests/cputest/build/mul-longlong-x86-nemu:     file format elf32-i386


Disassembly of section .text:

00100000 <_start>:
  100000:	bd 00 00 00 00       	mov    $0x0,%ebp
  100005:	bc 00 7c 00 00       	mov    $0x7c00,%esp
  10000a:	e8 11 00 00 00       	call   100020 <_trm_init>
  10000f:	90                   	nop

00100010 <_halt>:
  100010:	f3 0f 1e fb          	endbr32 
  100014:	55                   	push   %ebp
  100015:	89 e5                	mov    %esp,%ebp
  100017:	8b 45 08             	mov    0x8(%ebp),%eax
  10001a:	d6                   	(bad)  
  10001b:	eb fe                	jmp    10001b <_halt+0xb>
  10001d:	66 90                	xchg   %ax,%ax
  10001f:	90                   	nop

00100020 <_trm_init>:
  100020:	f3 0f 1e fb          	endbr32 
  100024:	55                   	push   %ebp
  100025:	89 e5                	mov    %esp,%ebp
  100027:	83 ec 08             	sub    $0x8,%esp
  10002a:	e8 49 00 00 00       	call   100078 <main>
  10002f:	d6                   	(bad)  
  100030:	eb fe                	jmp    100030 <_trm_init+0x10>
  100032:	66 90                	xchg   %ax,%ax

00100034 <nemu_assert>:
  100034:	f3 0f 1e fb          	endbr32 
  100038:	55                   	push   %ebp
  100039:	89 e5                	mov    %esp,%ebp
  10003b:	83 ec 08             	sub    $0x8,%esp
  10003e:	8b 45 08             	mov    0x8(%ebp),%eax
  100041:	85 c0                	test   %eax,%eax
  100043:	74 02                	je     100047 <nemu_assert+0x13>
  100045:	c9                   	leave  
  100046:	c3                   	ret    
  100047:	83 ec 0c             	sub    $0xc,%esp
  10004a:	6a 01                	push   $0x1
  10004c:	e8 bf ff ff ff       	call   100010 <_halt>
  100051:	8d 76 00             	lea    0x0(%esi),%esi

00100054 <mul>:
  100054:	f3 0f 1e fb          	endbr32 
  100058:	55                   	push   %ebp
  100059:	89 e5                	mov    %esp,%ebp
  10005b:	53                   	push   %ebx
  10005c:	8b 45 08             	mov    0x8(%ebp),%eax
  10005f:	8b 55 10             	mov    0x10(%ebp),%edx
  100062:	8b 5d 0c             	mov    0xc(%ebp),%ebx
  100065:	0f af da             	imul   %edx,%ebx
  100068:	8b 4d 14             	mov    0x14(%ebp),%ecx
  10006b:	0f af c8             	imul   %eax,%ecx
  10006e:	01 d9                	add    %ebx,%ecx
  100070:	f7 e2                	mul    %edx
  100072:	01 ca                	add    %ecx,%edx
  100074:	5b                   	pop    %ebx
  100075:	5d                   	pop    %ebp
  100076:	c3                   	ret    
  100077:	90                   	nop

00100078 <main>:
  100078:	f3 0f 1e fb          	endbr32 
  10007c:	8d 4c 24 04          	lea    0x4(%esp),%ecx
  100080:	83 e4 f0             	and    $0xfffffff0,%esp
  100083:	ff 71 fc             	pushl  -0x4(%ecx)
  100086:	55                   	push   %ebp
  100087:	89 e5                	mov    %esp,%ebp
  100089:	57                   	push   %edi
  10008a:	56                   	push   %esi
  10008b:	53                   	push   %ebx
  10008c:	51                   	push   %ecx
  10008d:	83 ec 18             	sub    $0x18,%esp
  100090:	31 f6                	xor    %esi,%esi
  100092:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
  100099:	89 f7                	mov    %esi,%edi
  10009b:	83 fe 04             	cmp    $0x4,%esi
  10009e:	74 75                	je     100115 <main+0x9d>
  1000a0:	8b 04 b5 b0 01 10 00 	mov    0x1001b0(,%esi,4),%eax
  1000a7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
  1000aa:	8b 5d e0             	mov    -0x20(%ebp),%ebx
  1000ad:	89 c1                	mov    %eax,%ecx
  1000af:	90                   	nop
  1000b0:	43                   	inc    %ebx
  1000b1:	83 ec 0c             	sub    $0xc,%esp
  1000b4:	89 c8                	mov    %ecx,%eax
  1000b6:	f7 6d e4             	imull  -0x1c(%ebp)
  1000b9:	89 d1                	mov    %edx,%ecx
  1000bb:	89 c2                	mov    %eax,%edx
  1000bd:	8b 04 dd 58 01 10 00 	mov    0x100158(,%ebx,8),%eax
  1000c4:	31 d0                	xor    %edx,%eax
  1000c6:	8b 14 dd 5c 01 10 00 	mov    0x10015c(,%ebx,8),%edx
  1000cd:	31 ca                	xor    %ecx,%edx
  1000cf:	09 d0                	or     %edx,%eax
  1000d1:	0f 94 c0             	sete   %al
  1000d4:	0f b6 c0             	movzbl %al,%eax
  1000d7:	50                   	push   %eax
  1000d8:	e8 57 ff ff ff       	call   100034 <nemu_assert>
  1000dd:	83 c4 10             	add    $0x10,%esp
  1000e0:	47                   	inc    %edi
  1000e1:	83 ff 04             	cmp    $0x4,%edi
  1000e4:	74 0a                	je     1000f0 <main+0x78>
  1000e6:	8b 0c bd b0 01 10 00 	mov    0x1001b0(,%edi,4),%ecx
  1000ed:	eb c1                	jmp    1000b0 <main+0x38>
  1000ef:	90                   	nop
  1000f0:	8b 45 e0             	mov    -0x20(%ebp),%eax
  1000f3:	83 c0 04             	add    $0x4,%eax
  1000f6:	29 f0                	sub    %esi,%eax
  1000f8:	89 45 e0             	mov    %eax,-0x20(%ebp)
  1000fb:	83 ec 0c             	sub    $0xc,%esp
  1000fe:	6a 01                	push   $0x1
  100100:	e8 2f ff ff ff       	call   100034 <nemu_assert>
  100105:	83 c4 10             	add    $0x10,%esp
  100108:	83 fe 03             	cmp    $0x3,%esi
  10010b:	74 1b                	je     100128 <main+0xb0>
  10010d:	46                   	inc    %esi
  10010e:	89 f7                	mov    %esi,%edi
  100110:	83 fe 04             	cmp    $0x4,%esi
  100113:	75 8b                	jne    1000a0 <main+0x28>
  100115:	83 ec 0c             	sub    $0xc,%esp
  100118:	6a 01                	push   $0x1
  10011a:	e8 15 ff ff ff       	call   100034 <nemu_assert>
  10011f:	83 c4 10             	add    $0x10,%esp
  100122:	46                   	inc    %esi
  100123:	eb e9                	jmp    10010e <main+0x96>
  100125:	8d 76 00             	lea    0x0(%esi),%esi
  100128:	83 ec 0c             	sub    $0xc,%esp
  10012b:	6a 01                	push   $0x1
  10012d:	e8 02 ff ff ff       	call   100034 <nemu_assert>
  100132:	83 c4 10             	add    $0x10,%esp
  100135:	31 c0                	xor    %eax,%eax
  100137:	8d 65 f0             	lea    -0x10(%ebp),%esp
  10013a:	59                   	pop    %ecx
  10013b:	5b                   	pop    %ebx
  10013c:	5e                   	pop    %esi
  10013d:	5f                   	pop    %edi
  10013e:	5d                   	pop    %ebp
  10013f:	8d 61 fc             	lea    -0x4(%ecx),%esp
  100142:	c3                   	ret    
