
/home/hust/ics2018/nexus-am/tests/cputest/build/bit-x86-nemu:     file format elf32-i386


Disassembly of section .text:

00100000 <_start>:
  100000:	bd 00 00 00 00       	mov    $0x0,%ebp
  100005:	bc 00 7c 00 00       	mov    $0x7c00,%esp
  10000a:	e8 11 00 00 00       	call   100020 <_trm_init>
  10000f:	90                   	nop

00100010 <_halt>:
  100010:	f3 0f 1e fb          	endbr32 
  100014:	55                   	push   %ebp
  100015:	89 e5                	mov    %esp,%ebp
  100017:	8b 45 08             	mov    0x8(%ebp),%eax
  10001a:	d6                   	(bad)  
  10001b:	eb fe                	jmp    10001b <_halt+0xb>
  10001d:	66 90                	xchg   %ax,%ax
  10001f:	90                   	nop

00100020 <_trm_init>:
  100020:	f3 0f 1e fb          	endbr32 
  100024:	55                   	push   %ebp
  100025:	89 e5                	mov    %esp,%ebp
  100027:	83 ec 08             	sub    $0x8,%esp
  10002a:	e8 8d 00 00 00       	call   1000bc <main>
  10002f:	d6                   	(bad)  
  100030:	eb fe                	jmp    100030 <_trm_init+0x10>
  100032:	66 90                	xchg   %ax,%ax

00100034 <nemu_assert>:
  100034:	f3 0f 1e fb          	endbr32 
  100038:	55                   	push   %ebp
  100039:	89 e5                	mov    %esp,%ebp
  10003b:	83 ec 08             	sub    $0x8,%esp
  10003e:	8b 45 08             	mov    0x8(%ebp),%eax
  100041:	85 c0                	test   %eax,%eax
  100043:	74 02                	je     100047 <nemu_assert+0x13>
  100045:	c9                   	leave  
  100046:	c3                   	ret    
  100047:	83 ec 0c             	sub    $0xc,%esp
  10004a:	6a 01                	push   $0x1
  10004c:	e8 bf ff ff ff       	call   100010 <_halt>
  100051:	8d 76 00             	lea    0x0(%esi),%esi

00100054 <getbit>:
  100054:	f3 0f 1e fb          	endbr32 
  100058:	55                   	push   %ebp
  100059:	89 e5                	mov    %esp,%ebp
  10005b:	8b 4d 0c             	mov    0xc(%ebp),%ecx
  10005e:	89 ca                	mov    %ecx,%edx
  100060:	c1 fa 03             	sar    $0x3,%edx
  100063:	83 e1 07             	and    $0x7,%ecx
  100066:	b8 01 00 00 00       	mov    $0x1,%eax
  10006b:	d3 e0                	shl    %cl,%eax
  10006d:	8b 4d 08             	mov    0x8(%ebp),%ecx
  100070:	84 04 11             	test   %al,(%ecx,%edx,1)
  100073:	0f 95 c0             	setne  %al
  100076:	5d                   	pop    %ebp
  100077:	c3                   	ret    

00100078 <setbit>:
  100078:	f3 0f 1e fb          	endbr32 
  10007c:	55                   	push   %ebp
  10007d:	89 e5                	mov    %esp,%ebp
  10007f:	83 ec 10             	sub    $0x10,%esp
  100082:	8b 55 0c             	mov    0xc(%ebp),%edx
  100085:	89 d1                	mov    %edx,%ecx
  100087:	83 e1 07             	and    $0x7,%ecx
  10008a:	b8 01 00 00 00       	mov    $0x1,%eax
  10008f:	d3 e0                	shl    %cl,%eax
  100091:	c1 fa 03             	sar    $0x3,%edx
  100094:	03 55 08             	add    0x8(%ebp),%edx
  100097:	89 55 fc             	mov    %edx,-0x4(%ebp)
  10009a:	80 7d 10 00          	cmpb   $0x0,0x10(%ebp)
  10009e:	8b 55 fc             	mov    -0x4(%ebp),%edx
  1000a1:	75 0d                	jne    1000b0 <setbit+0x38>
  1000a3:	f7 d0                	not    %eax
  1000a5:	22 02                	and    (%edx),%al
  1000a7:	8b 55 fc             	mov    -0x4(%ebp),%edx
  1000aa:	88 02                	mov    %al,(%edx)
  1000ac:	c9                   	leave  
  1000ad:	c3                   	ret    
  1000ae:	66 90                	xchg   %ax,%ax
  1000b0:	0a 02                	or     (%edx),%al
  1000b2:	8b 55 fc             	mov    -0x4(%ebp),%edx
  1000b5:	88 02                	mov    %al,(%edx)
  1000b7:	c9                   	leave  
  1000b8:	c3                   	ret    
  1000b9:	66 90                	xchg   %ax,%ax
  1000bb:	90                   	nop

001000bc <main>:
  1000bc:	f3 0f 1e fb          	endbr32 
  1000c0:	8d 4c 24 04          	lea    0x4(%esp),%ecx
  1000c4:	83 e4 f0             	and    $0xfffffff0,%esp
  1000c7:	ff 71 fc             	pushl  -0x4(%ecx)
  1000ca:	55                   	push   %ebp
  1000cb:	89 e5                	mov    %esp,%ebp
  1000cd:	53                   	push   %ebx
  1000ce:	51                   	push   %ecx
  1000cf:	83 ec 18             	sub    $0x18,%esp
  1000d2:	66 c7 45 f6 aa 00    	movw   $0xaa,-0xa(%ebp)
  1000d8:	6a 00                	push   $0x0
  1000da:	8d 5d f6             	lea    -0xa(%ebp),%ebx
  1000dd:	53                   	push   %ebx
  1000de:	e8 71 ff ff ff       	call   100054 <getbit>
  1000e3:	84 c0                	test   %al,%al
  1000e5:	0f 94 c0             	sete   %al
  1000e8:	0f b6 c0             	movzbl %al,%eax
  1000eb:	89 04 24             	mov    %eax,(%esp)
  1000ee:	e8 41 ff ff ff       	call   100034 <nemu_assert>
  1000f3:	58                   	pop    %eax
  1000f4:	5a                   	pop    %edx
  1000f5:	6a 01                	push   $0x1
  1000f7:	53                   	push   %ebx
  1000f8:	e8 57 ff ff ff       	call   100054 <getbit>
  1000fd:	fe c8                	dec    %al
  1000ff:	0f 94 c0             	sete   %al
  100102:	0f b6 c0             	movzbl %al,%eax
  100105:	89 04 24             	mov    %eax,(%esp)
  100108:	e8 27 ff ff ff       	call   100034 <nemu_assert>
  10010d:	59                   	pop    %ecx
  10010e:	58                   	pop    %eax
  10010f:	6a 02                	push   $0x2
  100111:	53                   	push   %ebx
  100112:	e8 3d ff ff ff       	call   100054 <getbit>
  100117:	84 c0                	test   %al,%al
  100119:	0f 94 c0             	sete   %al
  10011c:	0f b6 c0             	movzbl %al,%eax
  10011f:	89 04 24             	mov    %eax,(%esp)
  100122:	e8 0d ff ff ff       	call   100034 <nemu_assert>
  100127:	58                   	pop    %eax
  100128:	5a                   	pop    %edx
  100129:	6a 03                	push   $0x3
  10012b:	53                   	push   %ebx
  10012c:	e8 23 ff ff ff       	call   100054 <getbit>
  100131:	fe c8                	dec    %al
  100133:	0f 94 c0             	sete   %al
  100136:	0f b6 c0             	movzbl %al,%eax
  100139:	89 04 24             	mov    %eax,(%esp)
  10013c:	e8 f3 fe ff ff       	call   100034 <nemu_assert>
  100141:	59                   	pop    %ecx
  100142:	58                   	pop    %eax
  100143:	6a 04                	push   $0x4
  100145:	53                   	push   %ebx
  100146:	e8 09 ff ff ff       	call   100054 <getbit>
  10014b:	84 c0                	test   %al,%al
  10014d:	0f 94 c0             	sete   %al
  100150:	0f b6 c0             	movzbl %al,%eax
  100153:	89 04 24             	mov    %eax,(%esp)
  100156:	e8 d9 fe ff ff       	call   100034 <nemu_assert>
  10015b:	58                   	pop    %eax
  10015c:	5a                   	pop    %edx
  10015d:	6a 05                	push   $0x5
  10015f:	53                   	push   %ebx
  100160:	e8 ef fe ff ff       	call   100054 <getbit>
  100165:	fe c8                	dec    %al
  100167:	0f 94 c0             	sete   %al
  10016a:	0f b6 c0             	movzbl %al,%eax
  10016d:	89 04 24             	mov    %eax,(%esp)
  100170:	e8 bf fe ff ff       	call   100034 <nemu_assert>
  100175:	59                   	pop    %ecx
  100176:	58                   	pop    %eax
  100177:	6a 06                	push   $0x6
  100179:	53                   	push   %ebx
  10017a:	e8 d5 fe ff ff       	call   100054 <getbit>
  10017f:	84 c0                	test   %al,%al
  100181:	0f 94 c0             	sete   %al
  100184:	0f b6 c0             	movzbl %al,%eax
  100187:	89 04 24             	mov    %eax,(%esp)
  10018a:	e8 a5 fe ff ff       	call   100034 <nemu_assert>
  10018f:	58                   	pop    %eax
  100190:	5a                   	pop    %edx
  100191:	6a 07                	push   $0x7
  100193:	53                   	push   %ebx
  100194:	e8 bb fe ff ff       	call   100054 <getbit>
  100199:	fe c8                	dec    %al
  10019b:	0f 94 c0             	sete   %al
  10019e:	0f b6 c0             	movzbl %al,%eax
  1001a1:	89 04 24             	mov    %eax,(%esp)
  1001a4:	e8 8b fe ff ff       	call   100034 <nemu_assert>
  1001a9:	83 c4 0c             	add    $0xc,%esp
  1001ac:	6a 01                	push   $0x1
  1001ae:	6a 08                	push   $0x8
  1001b0:	53                   	push   %ebx
  1001b1:	e8 c2 fe ff ff       	call   100078 <setbit>
  1001b6:	83 c4 0c             	add    $0xc,%esp
  1001b9:	6a 00                	push   $0x0
  1001bb:	6a 09                	push   $0x9
  1001bd:	53                   	push   %ebx
  1001be:	e8 b5 fe ff ff       	call   100078 <setbit>
  1001c3:	83 c4 0c             	add    $0xc,%esp
  1001c6:	6a 01                	push   $0x1
  1001c8:	6a 0a                	push   $0xa
  1001ca:	53                   	push   %ebx
  1001cb:	e8 a8 fe ff ff       	call   100078 <setbit>
  1001d0:	83 c4 0c             	add    $0xc,%esp
  1001d3:	6a 00                	push   $0x0
  1001d5:	6a 0b                	push   $0xb
  1001d7:	53                   	push   %ebx
  1001d8:	e8 9b fe ff ff       	call   100078 <setbit>
  1001dd:	83 c4 0c             	add    $0xc,%esp
  1001e0:	6a 01                	push   $0x1
  1001e2:	6a 0c                	push   $0xc
  1001e4:	53                   	push   %ebx
  1001e5:	e8 8e fe ff ff       	call   100078 <setbit>
  1001ea:	83 c4 0c             	add    $0xc,%esp
  1001ed:	6a 00                	push   $0x0
  1001ef:	6a 0d                	push   $0xd
  1001f1:	53                   	push   %ebx
  1001f2:	e8 81 fe ff ff       	call   100078 <setbit>
  1001f7:	83 c4 0c             	add    $0xc,%esp
  1001fa:	6a 01                	push   $0x1
  1001fc:	6a 0e                	push   $0xe
  1001fe:	53                   	push   %ebx
  1001ff:	e8 74 fe ff ff       	call   100078 <setbit>
  100204:	83 c4 0c             	add    $0xc,%esp
  100207:	6a 00                	push   $0x0
  100209:	6a 0f                	push   $0xf
  10020b:	53                   	push   %ebx
  10020c:	e8 67 fe ff ff       	call   100078 <setbit>
  100211:	31 c0                	xor    %eax,%eax
  100213:	80 7d f7 55          	cmpb   $0x55,-0x9(%ebp)
  100217:	0f 94 c0             	sete   %al
  10021a:	89 04 24             	mov    %eax,(%esp)
  10021d:	e8 12 fe ff ff       	call   100034 <nemu_assert>
  100222:	83 c4 10             	add    $0x10,%esp
  100225:	31 c0                	xor    %eax,%eax
  100227:	8d 65 f8             	lea    -0x8(%ebp),%esp
  10022a:	59                   	pop    %ecx
  10022b:	5b                   	pop    %ebx
  10022c:	5d                   	pop    %ebp
  10022d:	8d 61 fc             	lea    -0x4(%ecx),%esp
  100230:	c3                   	ret    
