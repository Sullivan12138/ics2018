[1;34m[src/monitor/monitor.c,72,load_img] The image is /home/hust/ics2018/nexus-am/tests/cputest/build/hello-str-x86-nemu.bin[0m
[1;34m[src/monitor/diff-test/diff-test.c,46,init_difftest] Differential testing: [1;32mON[0m[0m
[1;34m[src/monitor/diff-test/diff-test.c,47,init_difftest] The result of every instruction will be compared with /home/hust/ics2018/nemu/tools/qemu-diff/build/qemu-so. This will help you a lot for debugging, but also significantly reduce the performance. If it is not necessary, you can turn it off in include/common.h.[0m
[1;34m[src/monitor/monitor.c,28,welcome] Debug: [1;32mON[0m[0m
[1;34m[src/monitor/monitor.c,29,welcome] If debug mode is on, A log file will be generated to record every instruction NEMU executes. This may lead to a large log file. If it is not necessary, you can turn it off in include/common.h.[0m
[1;34m[src/monitor/monitor.c,36,welcome] Build time: 23:30:52, Jan  2 2020[0m
  100000:   bd 00 00 00 00                        movl $0x0,%ebp
  100005:   bc 00 7c 00 00                        movl $0x7c00,%esp
  10000a:   e8 11 00 00 00                        call 100020
  100020:   f3 0f 1e fb                           call 100020
  100024:   55                                    pushl %ebp
  100025:   89 e5                                 movl %esp,%ebp
  100027:   83 ec 08                              subl $0x8,%esp
  10002a:   e8 25 00 00 00                        call 100054
  100054:   f3 0f 1e fb                           call 100054
  100058:   8d 4c 24 04                           leal 0x4(%esp),%ecx
  10005c:   83 e4 f0                              andl $0xfffffff0,%esp
  10005f:   ff 71 fc                              pushl -0x4(%ecx)
  100062:   55                                    pushl %ebp
  100063:   89 e5                                 movl %esp,%ebp
  100065:   51                                    pushl %ecx
  100066:   83 ec 08                              subl $0x8,%esp
  100069:   68 33 01 10 00                        pushl $0x100133
  10006e:   68 41 01 10 00                        pushl $0x100141
  100073:   68 80 01 10 00                        pushl $0x100180
  100078:   e8 a7 00 00 00                        call 100124
  100124:   f3 0f 1e fb                           call 100124
  100128:   31 c0                                 xorl %eax,%eax
  10012a:   c3                                    ret
  10007d:   58                                    popl %eax
  10007e:   5a                                    popl %edx
  10007f:   68 33 01 10 00                        pushl $0x100133
  100084:   68 80 01 10 00                        pushl $0x100180
  100089:   e8 9e 00 00 00                        call 10012c
  10012c:   f3 0f 1e fb                           call 10012c
  100130:   31 c0                                 xorl %eax,%eax
  100132:   c3                                    ret
  10008e:   85 c0                                 testl %eax,%eax
  100090:   0f 94 c0                              sete %al
  100093:   0f b6 c0                              movzxl %al,%al
  100096:   89 04 24                              movl %eax,(%esp)
  100099:   e8 96 ff ff ff                        call 100034
  100034:   f3 0f 1e fb                           call 100034
  100038:   55                                    pushl %ebp
  100039:   89 e5                                 movl %esp,%ebp
  10003b:   83 ec 08                              subl $0x8,%esp
  10003e:   8b 45 08                              movl 0x8(%ebp),%eax
  100041:   85 c0                                 testl %eax,%eax
  100043:   74 02                                 je 100047
  100045:   c9                                    leave
  100046:   c3                                    ret
  10009e:   c7 04 24 02 00 00 00                  movl $0x2,(%esp)
  1000a5:   6a 01                                 pushb $0x1
  1000a7:   6a 01                                 pushb $0x1
  1000a9:   68 44 01 10 00                        pushl $0x100144
  1000ae:   68 80 01 10 00                        pushl $0x100180
  1000b3:   e8 6c 00 00 00                        call 100124
  100124:   f3 0f 1e fb                           call 100124
  100128:   31 c0                                 xorl %eax,%eax
  10012a:   c3                                    ret
  1000b8:   83 c4 18                              addl $0x18,%esp
  1000bb:   68 52 01 10 00                        pushl $0x100152
  1000c0:   68 80 01 10 00                        pushl $0x100180
  1000c5:   e8 62 00 00 00                        call 10012c
  10012c:   f3 0f 1e fb                           call 10012c
  100130:   31 c0                                 xorl %eax,%eax
  100132:   c3                                    ret
  1000ca:   85 c0                                 testl %eax,%eax
  1000cc:   0f 94 c0                              sete %al
  1000cf:   0f b6 c0                              movzxl %al,%al
  1000d2:   89 04 24                              movl %eax,(%esp)
  1000d5:   e8 5a ff ff ff                        call 100034
  100034:   f3 0f 1e fb                           call 100034
  100038:   55                                    pushl %ebp
  100039:   89 e5                                 movl %esp,%ebp
  10003b:   83 ec 08                              subl $0x8,%esp
  10003e:   8b 45 08                              movl 0x8(%ebp),%eax
  100041:   85 c0                                 testl %eax,%eax
  100043:   74 02                                 je 100047
  100045:   c9                                    leave
  100046:   c3                                    ret
  1000da:   c7 04 24 0c 00 00 00                  movl $0xc,(%esp)
  1000e1:   6a 0a                                 pushb $0xa
  1000e3:   6a 02                                 pushb $0x2
  1000e5:   68 44 01 10 00                        pushl $0x100144
  1000ea:   68 80 01 10 00                        pushl $0x100180
  1000ef:   e8 30 00 00 00                        call 100124
  100124:   f3 0f 1e fb                           call 100124
  100128:   31 c0                                 xorl %eax,%eax
  10012a:   c3                                    ret
  1000f4:   83 c4 18                              addl $0x18,%esp
  1000f7:   68 5d 01 10 00                        pushl $0x10015d
  1000fc:   68 80 01 10 00                        pushl $0x100180
  100101:   e8 26 00 00 00                        call 10012c
  10012c:   f3 0f 1e fb                           call 10012c
  100130:   31 c0                                 xorl %eax,%eax
  100132:   c3                                    ret
  100106:   85 c0                                 testl %eax,%eax
  100108:   0f 94 c0                              sete %al
  10010b:   0f b6 c0                              movzxl %al,%al
  10010e:   89 04 24                              movl %eax,(%esp)
  100111:   e8 1e ff ff ff                        call 100034
  100034:   f3 0f 1e fb                           call 100034
  100038:   55                                    pushl %ebp
  100039:   89 e5                                 movl %esp,%ebp
  10003b:   83 ec 08                              subl $0x8,%esp
  10003e:   8b 45 08                              movl 0x8(%ebp),%eax
  100041:   85 c0                                 testl %eax,%eax
  100043:   74 02                                 je 100047
  100045:   c9                                    leave
  100046:   c3                                    ret
  100116:   83 c4 10                              addl $0x10,%esp
  100119:   31 c0                                 xorl %eax,%eax
  10011b:   8b 4d fc                              movl -0x4(%ebp),%ecx
  10011e:   c9                                    leave
  10011f:   8d 61 fc                              leal -0x4(%ecx),%esp
  100122:   c3                                    ret
  10002f:   d6                                    nemu trap
[1;31mnemu: HIT GOOD TRAP[0m at eip = 0x0010002f

[1;34m[src/monitor/cpu-exec.c,23,monitor_statistic] total guest instructions = 112[0m
