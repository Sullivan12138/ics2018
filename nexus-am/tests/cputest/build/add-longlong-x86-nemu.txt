
/home/hust/ics2018/nexus-am/tests/cputest/build/add-longlong-x86-nemu:     file format elf32-i386


Disassembly of section .text:

00100000 <_start>:
  100000:	bd 00 00 00 00       	mov    $0x0,%ebp
  100005:	bc 00 7c 00 00       	mov    $0x7c00,%esp
  10000a:	e8 11 00 00 00       	call   100020 <_trm_init>
  10000f:	90                   	nop

00100010 <_halt>:
  100010:	f3 0f 1e fb          	endbr32 
  100014:	55                   	push   %ebp
  100015:	89 e5                	mov    %esp,%ebp
  100017:	8b 45 08             	mov    0x8(%ebp),%eax
  10001a:	d6                   	(bad)  
  10001b:	eb fe                	jmp    10001b <_halt+0xb>
  10001d:	66 90                	xchg   %ax,%ax
  10001f:	90                   	nop

00100020 <_trm_init>:
  100020:	f3 0f 1e fb          	endbr32 
  100024:	55                   	push   %ebp
  100025:	89 e5                	mov    %esp,%ebp
  100027:	83 ec 08             	sub    $0x8,%esp
  10002a:	e8 3d 00 00 00       	call   10006c <main>
  10002f:	d6                   	(bad)  
  100030:	eb fe                	jmp    100030 <_trm_init+0x10>
  100032:	66 90                	xchg   %ax,%ax

00100034 <nemu_assert>:
  100034:	f3 0f 1e fb          	endbr32 
  100038:	55                   	push   %ebp
  100039:	89 e5                	mov    %esp,%ebp
  10003b:	83 ec 08             	sub    $0x8,%esp
  10003e:	8b 45 08             	mov    0x8(%ebp),%eax
  100041:	85 c0                	test   %eax,%eax
  100043:	74 02                	je     100047 <nemu_assert+0x13>
  100045:	c9                   	leave  
  100046:	c3                   	ret    
  100047:	83 ec 0c             	sub    $0xc,%esp
  10004a:	6a 01                	push   $0x1
  10004c:	e8 bf ff ff ff       	call   100010 <_halt>
  100051:	8d 76 00             	lea    0x0(%esi),%esi

00100054 <add>:
  100054:	f3 0f 1e fb          	endbr32 
  100058:	55                   	push   %ebp
  100059:	89 e5                	mov    %esp,%ebp
  10005b:	8b 45 10             	mov    0x10(%ebp),%eax
  10005e:	8b 55 14             	mov    0x14(%ebp),%edx
  100061:	03 45 08             	add    0x8(%ebp),%eax
  100064:	13 55 0c             	adc    0xc(%ebp),%edx
  100067:	5d                   	pop    %ebp
  100068:	c3                   	ret    
  100069:	66 90                	xchg   %ax,%ax
  10006b:	90                   	nop

0010006c <main>:
  10006c:	f3 0f 1e fb          	endbr32 
  100070:	8d 4c 24 04          	lea    0x4(%esp),%ecx
  100074:	83 e4 f0             	and    $0xfffffff0,%esp
  100077:	ff 71 fc             	pushl  -0x4(%ecx)
  10007a:	55                   	push   %ebp
  10007b:	89 e5                	mov    %esp,%ebp
  10007d:	57                   	push   %edi
  10007e:	56                   	push   %esi
  10007f:	53                   	push   %ebx
  100080:	51                   	push   %ecx
  100081:	83 ec 18             	sub    $0x18,%esp
  100084:	31 c9                	xor    %ecx,%ecx
  100086:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
  10008d:	89 4d e4             	mov    %ecx,-0x1c(%ebp)
  100090:	8b 45 e0             	mov    -0x20(%ebp),%eax
  100093:	8b b0 20 03 10 00    	mov    0x100320(%eax),%esi
  100099:	8b b8 24 03 10 00    	mov    0x100324(%eax),%edi
  10009f:	31 db                	xor    %ebx,%ebx
  1000a1:	89 75 d8             	mov    %esi,-0x28(%ebp)
  1000a4:	89 7d dc             	mov    %edi,-0x24(%ebp)
  1000a7:	90                   	nop
  1000a8:	83 ec 0c             	sub    $0xc,%esp
  1000ab:	8b 45 d8             	mov    -0x28(%ebp),%eax
  1000ae:	8b 55 dc             	mov    -0x24(%ebp),%edx
  1000b1:	03 04 dd 20 03 10 00 	add    0x100320(,%ebx,8),%eax
  1000b8:	13 14 dd 24 03 10 00 	adc    0x100324(,%ebx,8),%edx
  1000bf:	8b 7d e4             	mov    -0x1c(%ebp),%edi
  1000c2:	8b 8c df 20 01 10 00 	mov    0x100120(%edi,%ebx,8),%ecx
  1000c9:	31 c1                	xor    %eax,%ecx
  1000cb:	8b 84 df 24 01 10 00 	mov    0x100124(%edi,%ebx,8),%eax
  1000d2:	31 d0                	xor    %edx,%eax
  1000d4:	09 c1                	or     %eax,%ecx
  1000d6:	0f 94 c0             	sete   %al
  1000d9:	0f b6 c0             	movzbl %al,%eax
  1000dc:	50                   	push   %eax
  1000dd:	e8 52 ff ff ff       	call   100034 <nemu_assert>
  1000e2:	83 c4 10             	add    $0x10,%esp
  1000e5:	43                   	inc    %ebx
  1000e6:	83 fb 08             	cmp    $0x8,%ebx
  1000e9:	75 bd                	jne    1000a8 <main+0x3c>
  1000eb:	83 45 e0 08          	addl   $0x8,-0x20(%ebp)
  1000ef:	8b 45 e0             	mov    -0x20(%ebp),%eax
  1000f2:	83 45 e4 40          	addl   $0x40,-0x1c(%ebp)
  1000f6:	83 f8 40             	cmp    $0x40,%eax
  1000f9:	75 95                	jne    100090 <main+0x24>
  1000fb:	31 c0                	xor    %eax,%eax
  1000fd:	8d 65 f0             	lea    -0x10(%ebp),%esp
  100100:	59                   	pop    %ecx
  100101:	5b                   	pop    %ebx
  100102:	5e                   	pop    %esi
  100103:	5f                   	pop    %edi
  100104:	5d                   	pop    %ebp
  100105:	8d 61 fc             	lea    -0x4(%ecx),%esp
  100108:	c3                   	ret    
